{"version":3,"sources":["webpack://application-name/./app-todo/app.component.ts","webpack://application-name/./app-todo/app.module.ts","webpack://application-name/./app-todo/todo/app-routees.config.ts","webpack://application-name/./app-todo/todo/task.component.ts","webpack://application-name/./app-todo/todo/todo.list.component.ts","webpack://application-name/./app-todo/todo/todo.module.ts","webpack://application-name/./app-todo/todo/todoList.model.ts"],"names":[],"mappings":"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","file":"app-todo/bootstrap.bundle.js","sourcesContent":["import IComponentOptions = angular.IComponentOptions;\r\nimport {IHttpService, ILogService} from \"angular\";\r\n\r\nclass AppComponent{\r\n    name:string = 'App-Todo';\r\n    static $inject = ['$http','$log'];\r\n    constructor(private $http:IHttpService ,$log:ILogService){}\r\n}\r\n\r\nexport const appComponent : IComponentOptions = {\r\n    controller: AppComponent,\r\n    template : `\r\n    <div>\r\n        <h3>App Todo Micro Frontend</h3>       \r\n        <div ui-view=\"shellView\"></div>        \r\n    </div>  \r\n`};\r\n","import * as angular from 'angular';\r\nimport '@uirouter/angularjs';\r\nimport 'oclazyload';\r\n\r\nimport {todoModule} from './todo/todo.module';\r\nimport {appComponent} from \"./app.component\";\r\n\r\n\r\nexport const appModule = angular\r\n\t.module('app.module', [\r\n\t\t'ui.router',\r\n\t\t'oc.lazyLoad',\r\n\t\ttodoModule.name\r\n\t])\r\n\t.component('myApp', appComponent)\r\n\t.config([\r\n\t\t'$stateProvider', '$uiRouterProvider', '$stateRegistryProvider',\r\n\t\t($stateProvider, $uiRouter, $stateRegistry) => {\r\n\r\n\t\t\t// If the user enters a URL that doesn't match any known URL (state), send them to `/welcome`\r\n\t\t\tconst $urlService = $uiRouter.urlService;\r\n\t\t\t$urlService.rules.otherwise({ state: 'todo' });\r\n\r\n\t\t\tconst shellState = {\r\n\t\t\t\tname      : 'shell',\r\n\t\t\t\tredirectTo: 'todo',\r\n\t\t\t\tcomponent : 'myApp'\r\n\t\t\t}\r\n\t\t\t$stateRegistry.register(shellState);\r\n\r\n\t\t}\r\n\t]);\r\n","\r\nappRoutesConfig.$inject = ['$stateProvider','$stateRegistryProvider'];\r\nexport function appRoutesConfig($stateProvider,$stateRegistry){\r\n\r\n    const todoState = {\r\n        parent : 'shell',\r\n        name : 'todo',\r\n        url  : '/todo',\r\n        views : {\r\n            '!$default.shellView' : { component : 'todoList' }\r\n        }\r\n    };\r\n    $stateRegistry.register(todoState);\r\n}\r\n","/**\r\n * Created by Eyal on 12/19/2016.\r\n */\r\nimport IComponentOptions = angular.IComponentOptions;\r\nimport {Task, TodoList} from \"./todoList.model\";\r\n\r\nclass TaskComponent{\r\n    task:Task;\r\n    todoList:TodoList;\r\n    onDelete(){\r\n        this.todoList.remove(this.task.id);\r\n    }\r\n}\r\n\r\nexport const taskComponent : IComponentOptions = {\r\n    controller: TaskComponent,\r\n    bindings:{\r\n      task: '<source',\r\n      todoList:'<'\r\n    },\r\n    template : `\r\n    <div>\r\n        <input type=\"checkbox\" ng-model=\"$ctrl.task.isDone\">\r\n        {{$ctrl.task.id}} - {{$ctrl.task.desc}}\r\n        <button ng-click=\"$ctrl.onDelete()\">x</button>\r\n    </div>\r\n`};","import IComponentOptions = angular.IComponentOptions;\r\nimport {TodoList} from \"./todoList.model\";\r\nimport ILogService = angular.ILogService;\r\nimport IHttpService = angular.IHttpService;\r\n\r\nclass TodoListComponent{\r\n    vm:TodoList = new TodoList();\r\n    desc:string;\r\n\r\n    static $inject = [\"$log\",\"$http\",\"todo\"];\r\n\r\n    constructor(\r\n        private $log:ILogService,\r\n        private $http:IHttpService,\r\n        private todo:TodoList\r\n    ){\r\n        this.vm.add('bla bla');\r\n        this.vm.add('bezeqInt');\r\n        $log.debug('hi constructor');\r\n    }\r\n\r\n    add(desc:string){\r\n        // TODO:\r\n        this.vm.add(desc);\r\n    }\r\n\r\n    get tasks(){\r\n        return this.vm.tasks;\r\n    }\r\n}\r\n\r\nexport const todoListComponent : IComponentOptions = {\r\n    controller: TodoListComponent,\r\n    template : `\r\n    <div>\r\n        <h4>Micro frontend: App todo</h4>\r\n        <input type=\"text\" ng-model=\"$ctrl.desc\">\r\n        <button ng-click=\"$ctrl.add($ctrl.desc)\">Add</button>\r\n        <hr>        \r\n        <task \r\n            source=\"modelTask\"\r\n            todo-list=\"$ctrl.vm\"\r\n            ng-repeat=\"modelTask in $ctrl.tasks\" >            \r\n        </task>\r\n    </div>\r\n`};\r\n","import * as angular from 'angular';\r\nimport {appRoutesConfig} from \"./app-routees.config\";\r\nimport {todoListComponent} from \"./todo.list.component\";\r\nimport {TodoList} from \"./todoList.model\";\r\nimport {taskComponent} from \"./task.component\";\r\n\r\nimport IModule = angular.IModule;\r\n\r\nexport const todoModule: IModule = angular.module(\"todo.module\", [])\r\n\t.component(\"todoList\", todoListComponent)\r\n\t.component(\"task\"    , taskComponent)\r\n\t.service  (\"todo\"    , TodoList)\r\n\t.config   (appRoutesConfig);\r\n","/**\r\n * Created by Eyal on 12/19/2016.\r\n */\r\n\r\nvar counter = 0;\r\n\r\nexport interface Task{\r\n    id:number;\r\n    desc:string;\r\n    isDone:boolean;\r\n}\r\n\r\nexport class TodoTask implements Task{\r\n    id: number;\r\n    desc: string;\r\n    isDone: boolean;\r\n\r\n    constructor(desc:string,isDone:boolean = false){\r\n        this.id     = counter++;\r\n        this.isDone = isDone;\r\n        this.desc   = desc;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class TodoList{\r\n    tasks:Task[] = [];\r\n\r\n    add(desc:string){\r\n        this.tasks.push(new TodoTask(desc));\r\n        /*this.tasks.push({\r\n            id:counter++,\r\n            desc:desc,\r\n            isDone:false\r\n        });*/\r\n        console.log(JSON.stringify(this.tasks));\r\n    }\r\n    remove(id:number){\r\n        let index = this.tasks.findIndex(t=>t.id==id);\r\n        this.tasks.splice(index,1)\r\n    }\r\n}\r\n\r\n\r\n"],"sourceRoot":""}